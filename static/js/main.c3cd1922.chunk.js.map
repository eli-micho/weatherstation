{"version":3,"sources":["components/handleErrors.js","components/WeatherData/index.js","apikey.js","App.js","index.js"],"names":["renderError","document","querySelector","style","display","WeatherData","url","a","fetch","mode","res","json","weatherData","renderWeatherToDom","getWeatherUrl","city","value","errorMessage","validateInput","returnWeatherCall","container","getElementById","remove","clearDiv","createElement","setAttribute","location","currentTime","dataWrap","temperature","feelsLikeTemp","minTemp","maxTemp","humidity","time","Date","toLocaleTimeString","hour","minute","textContent","name","main","temp","feels_like","temp_min","temp_max","appendChild","classList","add","className","id","href","type","placeholder","size","onClick","e","preventDefault","App","ReactDOM","render","StrictMode"],"mappings":"6NAEMA,GAFeC,SAASC,cAAc,4BAExB,WACKD,SAASC,cAAc,4BAC/BC,MAAMC,QAAU,U,eC2GlBC,EA1GK,WAAM,4CACtB,WAAiCC,GAAjC,iBAAAC,EAAA,+EAE0BC,MAAMF,EAAK,CAACG,KAAM,SAF5C,cAEcC,EAFd,gBAGkCA,EAAIC,OAHtC,OAGcC,EAHd,OAIQC,EAAmBD,GAJ3B,kDAMQZ,IANR,2DADsB,sBAWtB,IAAMc,EAAgB,WAClB,IAAMC,EAAOd,SAASC,cAAc,iBAAiBc,MACrD,GDXc,SAACD,GACnB,IAAME,EAAehB,SAASC,cAAc,4BAC5C,GAAW,IAARa,EAIC,OADAE,EAAad,MAAMC,QAAU,QACtB,EAHPJ,ICQGkB,CAAcH,GAAO,OAAO,GAbZ,SAAD,2BAgBlBI,CADS,2DAAuDJ,EAAvD,kBCpBD,mCDoBC,mBAWPF,EAAqB,SAACD,IAPX,WACb,IAAMQ,EAAYnB,SAASoB,eAAe,6BACvCD,GACCA,EAAUE,SAKdC,GACA,IAAMH,EAAYnB,SAASuB,cAAc,OACzCJ,EAAUK,aAAa,KAAK,6BAG5B,IAAMC,EAAWzB,SAASuB,cAAc,MAClCG,EAAc1B,SAASuB,cAAc,QACrCI,EAAW3B,SAASuB,cAAc,OAClCK,EAAc5B,SAASuB,cAAc,QACrCM,EAAgB7B,SAASuB,cAAc,QACvCO,EAAU9B,SAASuB,cAAc,QACjCQ,EAAU/B,SAASuB,cAAc,QACjCS,EAAWhC,SAASuB,cAAc,QAElCU,GAAO,IAAIC,MAAOC,mBAAmB,CAAC,SAAU,CAACC,KAAM,UAAWC,OAAQ,YAEhFZ,EAASD,aAAa,KAAM,YAC5BC,EAASa,YAAc3B,EAAY4B,KAEnCb,EAAYF,aAAa,KAAM,gBAC/BE,EAAYY,YAAcL,EAE1BN,EAASH,aAAa,KAAM,aAE5BI,EAAYU,YAAZ,+BAAkD3B,EAAY6B,KAAKC,KAAnE,SAEAZ,EAAcS,YAAd,sBAA2C3B,EAAY6B,KAAKE,WAA5D,SAEAZ,EAAQQ,YAAR,uBAAsC3B,EAAY6B,KAAKG,SAAvD,SAEAZ,EAAQO,YAAR,wBAAuC3B,EAAY6B,KAAKI,SAAxD,SAEAZ,EAASM,YAAT,oBAAoC3B,EAAY6B,KAAKR,SAArD,KAEAL,EAASkB,YAAYjB,GACrBD,EAASkB,YAAYhB,GACrBF,EAASkB,YAAYf,GACrBH,EAASkB,YAAYd,GACrBJ,EAASkB,YAAYb,GAErBb,EAAU0B,YAAYpB,GACtBN,EAAU0B,YAAYnB,GACtBP,EAAU0B,YAAYlB,GAEtB3B,SAASC,cAAc,SAAS4C,YAAY1B,GAC5CA,EAAU2B,UAAUC,IAAI,YAU5B,OACI,gCACI,yBAAQC,UAAU,SAAlB,UACI,oBAAIC,GAAG,YAAP,yBACA,4CAAc,mBAAGA,GAAG,cAAcC,KAAK,8CAAzB,sBAAd,gBAGJ,sBAAKF,UAAU,OAAf,UACI,sBAAKC,GAAG,mBAAR,UACI,uBAAMA,GAAG,cAAT,UACI,uBAAOE,KAAK,OAAOF,GAAG,eAAeG,YAAY,cAAcC,KAAK,OACpE,uBAAOF,KAAK,SAASH,UAAU,MAAMC,GAAG,YAAYlC,MAAM,SAASuC,QAjBhE,SAACC,GACpBA,EAAEC,iBACF3C,UAkBY,qBAAKoC,GAAG,0BAA0B/C,MAAO,CAACC,QAAS,QAAnD,SACI,8DAGR,qBAAK6C,UAAU,iB,ME7FhBS,MATf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCFNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5D,SAASoB,eAAe,W","file":"static/js/main.c3cd1922.chunk.js","sourcesContent":["const errorMessage = document.querySelector('#error-message-container'); \n\nconst renderError = () => {\n    const errorMessage = document.querySelector('#error-message-container'); \n    errorMessage.style.display = 'block'; \n};\n\nconst validateInput = (city) => {\n    const errorMessage = document.querySelector('#error-message-container'); \n    if(city == ''){\n        renderError()\n    }else{\n        errorMessage.style.display = 'none';\n        return false\n    }\n};\n\nexport { validateInput, renderError }","import React from 'react';\nimport { renderError, validateInput } from './../handleErrors';\nimport { api_key } from './../../apikey';\nimport './styles.scss';\n\nconst WeatherData = () => {\n    async function returnWeatherCall(url) {\n        try{\n            const res = await fetch(url, {mode: \"cors\"});\n            const weatherData = await res.json();\n            renderWeatherToDom(weatherData)\n        }catch(err){\n            renderError()\n        }\n    };\n\n    const getWeatherUrl = () => {\n        const city = document.querySelector('#search-input').value;\n        if(validateInput(city)) return false;\n    \n        const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api_key}&units=metric`;\n        returnWeatherCall(url)\n    };\n\n    const clearDiv = () => {\n        const container = document.getElementById('display-results-container');\n        if(container) {\n            container.remove()\n        }\n    }\n\n    const renderWeatherToDom = (weatherData) => {\n        clearDiv()\n        const container = document.createElement('div') \n        container.setAttribute('id','display-results-container');\n        \n    \n        const location = document.createElement('h1');\n        const currentTime = document.createElement('span');\n        const dataWrap = document.createElement('div');\n        const temperature = document.createElement('span');\n        const feelsLikeTemp = document.createElement('span');\n        const minTemp = document.createElement('span');\n        const maxTemp = document.createElement('span');\n        const humidity = document.createElement('span');\n    \n        const time = new Date().toLocaleTimeString(['en-us'], {hour: '2-digit', minute: '2-digit'})\n    \n        location.setAttribute('id', 'location');\n        location.textContent = weatherData.name;\n    \n        currentTime.setAttribute('id', 'current-time')\n        currentTime.textContent = time;\n    \n        dataWrap.setAttribute('id', 'data-wrap');\n    \n        temperature.textContent = `Current Temperature: ${weatherData.main.temp}\\xB0C`\n    \n        feelsLikeTemp.textContent = `Feels Like: ${weatherData.main.feels_like}\\xB0C`\n    \n        minTemp.textContent = `Today's Low: ${weatherData.main.temp_min}\\xB0C`;\n    \n        maxTemp.textContent = `Today's High: ${weatherData.main.temp_max}\\xB0C`;\n    \n        humidity.textContent = `Humidity: ${weatherData.main.humidity}%`;\n    \n        dataWrap.appendChild(temperature);\n        dataWrap.appendChild(feelsLikeTemp);\n        dataWrap.appendChild(minTemp);\n        dataWrap.appendChild(maxTemp);\n        dataWrap.appendChild(humidity);\n    \n        container.appendChild(location);\n        container.appendChild(currentTime);\n        container.appendChild(dataWrap);\n    \n        document.querySelector('.main').appendChild(container);\n        container.classList.add('fade-in');\n        \n    };\n\n    const renderSearchUI = (e) => {\n        e.preventDefault();\n        getWeatherUrl()\n    }\n    \n\n    return (\n        <div>\n            <header className=\"header\">\n                <h1 id=\"app-title\">Weather App</h1>\n                <span>Made by <a id=\"github-link\" href=\"https://github.com/eli-micho/weatherstation\">Elijah M</a>. 2021.</span>\n            </header>\n\n            <div className=\"main\">        \n                <div id=\"search-container\">\n                    <form id=\"search-form\">\n                        <input type=\"text\" id=\"search-input\" placeholder=\"Search City\" size=\"40\" />\n                        <input type=\"submit\" className=\"btn\" id=\"searchBtn\" value=\"Search\" onClick={renderSearchUI} />\n                    </form>\n\n                    <div id=\"error-message-container\" style={{display: 'none'}}>\n                        <span>Enter Valid City Name</span>\n                    </div>\n                </div>\n                <div className=\"break\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default WeatherData;\n","const api_key = 'a3b38d6618c940cbb6fa276b682987de';\n\nexport { api_key };","import WeatherData from './components/WeatherData/';\nimport './main.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WeatherData />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}